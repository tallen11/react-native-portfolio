{"version":3,"sources":["webms sync /^/.//.*$","webms/astronomen.webm","webms/coffeeshopdemo.webm","webms/cryptodemo.webm","webms/igstylepager.webm","App.js","items/Astronomen.js","items/CryptoDemo.js","items/IGStylePager.js","items/CoffeeShopDemo.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Rows","name","webm","downloadLink","description","href","title","PortfolioItem","style","display","flexDirection","width","paddingTop","paddingBottom","paddingLeft","paddingRight","alignItems","borderRadius","src","require","this","props","item","autoPlay","loop","muted","fontFamily","color","fontSize","textAlign","React","PureComponent","Row","items","v","Component","App","className","rel","r","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddec883c.chunk.js","sourcesContent":["var map = {\n\t\"./astronomen.webm\": 16,\n\t\"./coffeeshopdemo.webm\": 17,\n\t\"./cryptodemo.webm\": 18,\n\t\"./igstylepager.webm\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","module.exports = __webpack_public_path__ + \"static/media/astronomen.fa0ddfff.webm\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshopdemo.7c085b00.webm\";","module.exports = __webpack_public_path__ + \"static/media/cryptodemo.034cdb82.webm\";","module.exports = __webpack_public_path__ + \"static/media/igstylepager.1c396fdf.webm\";","import React from 'react';\nimport './App.css';\n\nimport PropTypes from 'prop-types';\n\nimport Astronomen from './items/Astronomen';\nimport CryptoDemo from './items/CryptoDemo';\nimport IGStylePager from './items/IGStylePager';\nimport CoffeeShopDemo from './items/CoffeeShopDemo';\n\nconst Rows = [\n    [\n        Astronomen,\n        CryptoDemo,\n    ],\n    [\n        IGStylePager,\n        CoffeeShopDemo,\n    ],\n];\n\nclass PortfolioItem extends React.PureComponent {\n\n    static propTypes = {\n        item: PropTypes.object,\n    };\n\n    render() {\n        return (\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: 750,\n                paddingTop: 30,\n                paddingBottom: 30,\n                paddingLeft: 30,\n                paddingRight: 30,\n            }}>\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                    <video\n                        style={{\n                            width: 400,\n                            borderRadius: '15px',\n                        }}\n                        src={require('./webms/' + this.props.item.webm)}\n                        autoPlay\n                        loop\n                        muted />\n                </div>\n                \n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    paddingLeft: 30,\n                    alignItems: 'flex-start',\n                }}>\n                    <h2 style={{\n                        fontFamily: 'Roboto Medium',\n                        color: '#333333',\n                        fontSize: '2.5em',\n                    }}>{this.props.item.name}</h2>\n\n                    <a href={this.props.item.downloadLink}>Source Code</a>\n                    <p style={{\n                        textAlign: 'justify',\n                        fontFamily: 'Roboto',\n                        color: '#333333',\n                    }}>{this.props.item.description}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Row extends React.Component {\n\n    static propTypes = {\n        items: PropTypes.array.isRequired,\n    };\n\n    render() {\n        return (\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n            }}>\n                { this.props.items.map(v => <PortfolioItem item={v} />) }\n            </div>\n        );\n    }\n}\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <link href=\"https://fonts.googleapis.com/css?family=Roboto&display=swap\" rel=\"stylesheet\" />\n            <div>\n                <h1>React Native Portfolio</h1>\n                <h2>Tate Allen</h2>\n                <p>This is a collection of small React Native experiments I've done to try out various concepts.</p>\n            </div>\n            \n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                // backgroundColor: 'gray',\n            }}>\n                { Rows.map(r => <Row items={r} />) }\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\n\nexport default {\n    name: 'Astronomen',\n    webm: 'astronomen.webm',\n    downloadLink: '#',\n    description: (\n        <p>\n            {`This was a small TypeScript project that pulls data from an API containing\n            information on any astronauts currently in space. The API can be found `}\n            <a href=\"http://open-notify.org/Open-Notify-API/People-In-Space/\">here</a>\n            {`. It only has one endpoint that returns an array of objects containing the name and\n            occupied spacecraft of the astronaut. Unfortunately no further information is\n            provided by the API and placeholder data is used in the detail view.`}\n            <br/>\n            <br/>\n            {`The main purpose of this experiment was to play around with gestures more.\n             The slide up, detail view that appears when an astronaut is tapped is dismissed\n             by swiping the view away, but it is fully interactive. I also used this as an \n             opportunity to practice my design skills. I think the app came out looking pretty nice.`}\n            <br/>\n            <br/>\n            {`This project uses TypeScript and React Native 0.61.`}\n            <br/>\n            <br/>\n            <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\"             title=\"Flaticon\">www.flaticon.com</a></div>\n        </p>\n    ),\n};","import React from 'react';\n\nexport default {\n    name: 'Crypto Demo',\n    webm: 'cryptodemo.webm',\n    downloadLink: 'https://github.com/tallen11/react-native-crypto-demo',\n    description: (\n        <p>\n            {`This little demo project pulls cryptocurrency data from an `}\n            <a href='https://min-api.cryptocompare.com/'>API</a>\n            {` and\n            displays it in a paging, card-style UI. The UI design was heavily inspired\n            by this Dribbble `}\n            <a href='https://dribbble.com/shots/7302294-Cryptocurrency-wallet'>post</a>\n            <br/>\n            <br/>\n            {`The purpose of this project was to experiment with SVGs as well as animating them.\n            All of the curvy, graph components are SVG paths that act as rough graphs displaying\n            historical pricing trends of the given cryptocurrency, pulled from the API. As you\n            can see in the video, the graphs are animated (using the native driver for high performance) \n            and give a pleasing aesthetic.`}\n            <br/>\n            <br/>\n            {`This project uses TypeScript and React Native 0.61.`}\n        </p>\n    ),\n};\n","import React from 'react';\n\nexport default {\n    name: 'Instagram Style Pager Indicator',\n    webm: 'igstylepager.webm',\n    downloadLink: 'https://github.com/tallen11/react-native-ig-pager-demo',\n    description: (\n        <p>\n            {`A simple component project that implements a page indicator (the dots at the bottom)\n            similar to the one found in the Instagram iOS app. I thought it looked\n            interesting and would be fun to implement myself.`}\n            <br/>\n            <br/>\n            {`Its purpose is to allow many pages to be indicated with a small number\n            of dots, by keeping the page indicator equivalent of elipses to the right and\n            left of a few central dots and showing a pleasing animations when the current\n            page index extends beyond the displayed dots.`}\n            <br/>\n            <br/>\n            {`This project uses TypeScript and React Native 0.61.`}\n        </p>\n    ),\n};\n","import React from 'react';\n\nexport default {\n    name: 'Coffee Shop Demo',\n    webm: 'coffeeshopdemo.webm',\n    downloadLink: 'https://github.com/tallen11/react-native-coffee-shop-demo',\n    description: (\n        <p>\n            {`A mockup of a coffee shop app, inspired by this `}\n            <a href='https://dribbble.com/shots/8245907-Coffee-House-App-Design'>Dribble design</a>{`.\n             I was mainly intrigued by the vertical menu items on the left and wanted to implement it\n             in React Native. Clearly it can be done, but it's not too robust as rotating text (or any\n             type of view), doesn't account for the normal layout rules, so positioning and sizing \n             rotated views can be difficult and needs fine tuning.`}\n            <br/>\n            <br/>\n            {`I was also able to experiment with some nice animations as well as displaying a Map with custom\n            markers.`}\n            <br/>\n            <br/>\n            {`This project uses TypeScript and React Native 0.61.`}\n            <br/>\n            <br/>\n            <a href=\"https://icons8.com/icons/set/menu-2--v1\">Menu Vertical icon</a> by <a href=\"https://icons8.com\">Icons8</a>\n        </p>\n    ),\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}